module GL_VERSION_1_4
  module Compatibility
  Functions = {
      def glFogCoordPointer(type, stride, pointer) end => [ :void, :GLenum, :GLsizei, :pointer ].freeze,
      def glFogCoordd(coord) end => [ :void, :GLdouble ].freeze,
      def glFogCoorddv(coord) end => [ :void, :pointer ].freeze,
      def glFogCoordf(coord) end => [ :void, :GLfloat ].freeze,
      def glFogCoordfv(coord) end => [ :void, :pointer ].freeze,
      def glSecondaryColor3b(red, green, blue) end => [ :void, :GLbyte, :GLbyte, :GLbyte ].freeze,
      def glSecondaryColor3bv(v) end => [ :void, :pointer ].freeze,
      def glSecondaryColor3d(red, green, blue) end => [ :void, :GLdouble, :GLdouble, :GLdouble ].freeze,
      def glSecondaryColor3dv(v) end => [ :void, :pointer ].freeze,
      def glSecondaryColor3f(red, green, blue) end => [ :void, :GLfloat, :GLfloat, :GLfloat ].freeze,
      def glSecondaryColor3fv(v) end => [ :void, :pointer ].freeze,
      def glSecondaryColor3i(red, green, blue) end => [ :void, :GLint, :GLint, :GLint ].freeze,
      def glSecondaryColor3iv(v) end => [ :void, :pointer ].freeze,
      def glSecondaryColor3s(red, green, blue) end => [ :void, :GLshort, :GLshort, :GLshort ].freeze,
      def glSecondaryColor3sv(v) end => [ :void, :pointer ].freeze,
      def glSecondaryColor3ub(red, green, blue) end => [ :void, :GLubyte, :GLubyte, :GLubyte ].freeze,
      def glSecondaryColor3ubv(v) end => [ :void, :pointer ].freeze,
      def glSecondaryColor3ui(red, green, blue) end => [ :void, :GLuint, :GLuint, :GLuint ].freeze,
      def glSecondaryColor3uiv(v) end => [ :void, :pointer ].freeze,
      def glSecondaryColor3us(red, green, blue) end => [ :void, :GLushort, :GLushort, :GLushort ].freeze,
      def glSecondaryColor3usv(v) end => [ :void, :pointer ].freeze,
      def glSecondaryColorPointer(size, type, stride, pointer) end => [ :void, :GLint, :GLenum, :GLsizei, :pointer ].freeze,
      def glWindowPos2d(x, y) end => [ :void, :GLdouble, :GLdouble ].freeze,
      def glWindowPos2dv(v) end => [ :void, :pointer ].freeze,
      def glWindowPos2f(x, y) end => [ :void, :GLfloat, :GLfloat ].freeze,
      def glWindowPos2fv(v) end => [ :void, :pointer ].freeze,
      def glWindowPos2i(x, y) end => [ :void, :GLint, :GLint ].freeze,
      def glWindowPos2iv(v) end => [ :void, :pointer ].freeze,
      def glWindowPos2s(x, y) end => [ :void, :GLshort, :GLshort ].freeze,
      def glWindowPos2sv(v) end => [ :void, :pointer ].freeze,
      def glWindowPos3d(x, y, z) end => [ :void, :GLdouble, :GLdouble, :GLdouble ].freeze,
      def glWindowPos3dv(v) end => [ :void, :pointer ].freeze,
      def glWindowPos3f(x, y, z) end => [ :void, :GLfloat, :GLfloat, :GLfloat ].freeze,
      def glWindowPos3fv(v) end => [ :void, :pointer ].freeze,
      def glWindowPos3i(x, y, z) end => [ :void, :GLint, :GLint, :GLint ].freeze,
      def glWindowPos3iv(v) end => [ :void, :pointer ].freeze,
      def glWindowPos3s(x, y, z) end => [ :void, :GLshort, :GLshort, :GLshort ].freeze,
      def glWindowPos3sv(v) end => [ :void, :pointer ].freeze,
    }.freeze
  end
end